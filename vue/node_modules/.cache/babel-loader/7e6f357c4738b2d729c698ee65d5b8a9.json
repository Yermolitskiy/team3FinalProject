{"remainingRequest":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/thread-loader/dist/cjs.js!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/babel-loader/lib/index.js!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/AddPost.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/AddPost.vue","mtime":1630661655953},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/thread-loader/dist/cjs.js","mtime":1630655629680},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/babel-loader/lib/index.js","mtime":1630655630393},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1630655630586}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0IFBvc3REYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9Qb3N0RGF0YVNlcnZpY2UiOwppbXBvcnQgRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1VJL0Zvcm0udnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEZvcm06IEZvcm0KICB9LAogIG5hbWU6ICJhZGQtcG9zdCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3Q6IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHB1Ymxpc2hlZDogZmFsc2UsCiAgICAgICAgaW1hZ2U6IG51bGwsCiAgICAgICAgaW1hZ2VVcmw6IG51bGwKICAgICAgfSwKICAgICAgc3VibWl0dGVkOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHBpY2tGaWxlOiBmdW5jdGlvbiBwaWNrRmlsZSgpIHsKICAgICAgdGhpcy4kcmVmcy5maWxlSW5wdXQuY2xpY2soKTsKICAgIH0sCiAgICBvbkZpbGVQaWNrZWQ6IGZ1bmN0aW9uIG9uRmlsZVBpY2tlZChldmVudCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGZpbGVzID0gZXZlbnQudGFyZ2V0LmZpbGVzOwogICAgICB0aGlzLnBvc3QuaW1hZ2UgPSBmaWxlc1swXTsKCiAgICAgIGlmICh0aGlzLnBvc3QuaW1hZ2UpIHsKICAgICAgICAvL3BpY3R1cmUgcHJldmlldwogICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICBmaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMucG9zdC5pbWFnZVVybCA9IGZpbGVSZWFkZXIucmVzdWx0OwogICAgICAgIH0pOwogICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlc1swXSk7CiAgICAgIH0KICAgIH0sCiAgICBzYXZlUG9zdDogZnVuY3Rpb24gc2F2ZVBvc3QoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGRhdGE7CgogICAgICBpZiAodGhpcy5wb3N0LmltYWdlKSB7CiAgICAgICAgZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGRhdGEuYXBwZW5kKCd0aXRsZScsIHRoaXMucG9zdC50aXRsZSk7CiAgICAgICAgZGF0YS5hcHBlbmQoJ2Rlc2NyaXB0aW9uJywgdGhpcy5wb3N0LmRlc2NyaXB0aW9uKTsKICAgICAgICBkYXRhLmFwcGVuZCgnaW1hZ2UnLCB0aGlzLnBvc3QuaW1hZ2UpOwogICAgICB9IGVsc2UgewogICAgICAgIGRhdGEgPSB7CiAgICAgICAgICB0aXRsZTogdGhpcy5wb3N0LnRpdGxlLAogICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMucG9zdC5kZXNjcmlwdGlvbgogICAgICAgIH07CiAgICAgIH0KCiAgICAgIFBvc3REYXRhU2VydmljZS5jcmVhdGUoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIucG9zdC5pZCA9IHJlc3BvbnNlLmRhdGEuaWQ7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgX3RoaXMyLnN1Ym1pdHRlZCA9IHRydWU7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIG5ld1Bvc3Q6IGZ1bmN0aW9uIG5ld1Bvc3QoKSB7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gZmFsc2U7CiAgICAgIHRoaXMucG9zdCA9IHt9OwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/AddPost.vue"],"names":[],"mappings":";;AAwDA,OAAO,eAAP,MAA4B,6BAA5B;AACA,OAAO,IAAP,MAAiB,2BAAjB;AAEA,eAAe;AACb,EAAA,UAAU,EAAC;AAAC,IAAA,IAAI,EAAJ;AAAD,GADE;AAEb,EAAA,IAAI,EAAE,UAFO;AAGb,EAAA,IAHa,kBAGN;AACL,WAAO;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,EAAE,EAAE,IADA;AAEJ,QAAA,KAAK,EAAE,EAFH;AAGJ,QAAA,WAAW,EAAE,EAHT;AAIJ,QAAA,SAAS,EAAE,KAJP;AAKJ,QAAA,KAAK,EAAC,IALF;AAMJ,QAAA,QAAQ,EAAC;AANL,OADD;AASL,MAAA,SAAS,EAAE;AATN,KAAP;AAWD,GAfY;AAgBb,EAAA,OAAO,EAAE;AACP,IAAA,QADO,sBACG;AACE,WAAK,KAAL,CAAW,SAAX,CAAqB,KAArB;AACC,KAHN;AAIC,IAAA,YAJD,wBAIc,KAJd,EAIoB;AAAA;;AACf,UAAM,KAAI,GAAI,KAAK,CAAC,MAAN,CAAa,KAA3B;AACA,WAAK,IAAL,CAAU,KAAV,GAAkB,KAAK,CAAC,CAAD,CAAvB;;AAEA,UAAG,KAAK,IAAL,CAAU,KAAb,EAAmB;AACjB;AACA,YAAM,UAAS,GAAI,IAAI,UAAJ,EAAnB;AACA,QAAA,UAAU,CAAC,gBAAX,CAA4B,MAA5B,EAAqC;AAAA,iBAAM,KAAI,CAAC,IAAL,CAAU,QAAV,GAAqB,UAAU,CAAC,MAAtC;AAAA,SAArC;AACA,QAAA,UAAU,CAAC,aAAX,CAAyB,KAAK,CAAC,CAAD,CAA9B;AACF;AAGC,KAhBN;AAiBP,IAAA,QAjBO,sBAiBI;AAAA;;AAET,UAAI,IAAJ;;AAEA,UAAG,KAAK,IAAL,CAAU,KAAb,EAAmB;AACjB,QAAA,IAAG,GAAI,IAAI,QAAJ,EAAP;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,OAAZ,EAAsB,KAAK,IAAL,CAAU,KAAhC;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,aAAZ,EAA0B,KAAK,IAAL,CAAU,WAApC;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,OAAZ,EAAsB,KAAK,IAAL,CAAU,KAAhC;AACD,OALD,MAKK;AACF,QAAA,IAAG,GAAI;AACN,UAAA,KAAK,EAAE,KAAK,IAAL,CAAU,KADX;AAEN,UAAA,WAAW,EAAE,KAAK,IAAL,CAAU;AAFjB,SAAP;AAIH;;AAIA,MAAA,eAAe,CAAC,MAAhB,CAAuB,IAAvB,EACG,IADH,CACQ,UAAA,QAAO,EAAK;AAChB,QAAA,MAAI,CAAC,IAAL,CAAU,EAAV,GAAe,QAAQ,CAAC,IAAT,CAAc,EAA7B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,QAAQ,CAAC,IAArB;AACA,QAAA,MAAI,CAAC,SAAL,GAAiB,IAAjB;AACD,OALH,EAMG,KANH,CAMS,UAAA,CAAA,EAAK;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACD,OARH;AASD,KA5CM;AA8CP,IAAA,OA9CO,qBA8CG;AACR,WAAK,SAAL,GAAiB,KAAjB;AACA,WAAK,IAAL,GAAY,EAAZ;AACF;AAjDO;AAhBI,CAAf","sourcesContent":["<template>\n  <form class=\"edit-form\">\n    <div v-if=\"!submitted\">\n        <Form>\n          <template #header>\n            Share your thoughts with other\n          </template>\n\n          <template #input1>\n            <div>\n                <label for=\"title\"> Title </label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  required\n                  v-model=\"post.title\"\n                  name=\"title\"\n                  placeholder=\"Post title\"\n                />\n            </div>\n          </template>\n\n          <template #buttontest @click.prevent=\"test\">\n            lol\n          </template>\n\n          <template #input2>\n             <label for=\"description\"> Enter your post description </label>\n              <textarea name=\"description\" required v-model=\"post.description\" id=\"description\" cols=\"30\" rows=\"10\"></textarea>\n          </template>\n          <template #button1>\n            <button @click=\"savePost\" class=\"success_btn\">Submit</button>\n          </template>\n\n          <template #button2>\n            <button @click.prevent=\"pickFile\" class=\"additional_btn1\" >Upload Image</button>\n            <input type=\"file\" ref=\"fileInput\" accept=\"image/* , .jpg , .png\" @change=\"onFilePicked\" >\n          </template>\n\n          <template #additional_content1>\n             <div v-if=\"post.image\">\n                    <p>Post Image preview</p>\n                    <img :src=\"post.imageUrl\" alt=\"Post image preview\">\n                </div>\n          </template>\n\n        </Form>\n      </div>\n    <div v-else>\n      <h4>You submitted successfully!</h4>\n      <button class=\"button-blog\" @click=\"newPost\">Add</button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport PostDataService from \"../services/PostDataService\";\nimport Form from '../components/UI/Form.vue'\n\nexport default {\n  components:{Form},\n  name: \"add-post\",\n  data() {\n    return {\n      post: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n        image:null,\n        imageUrl:null\n      },\n      submitted: false\n    };\n  },\n  methods: {\n    pickFile(){\n                this.$refs.fileInput.click()\n                },\n            onFilePicked(event){\n                const files = event.target.files\n                this.post.image = files[0]\n\n                if(this.post.image){\n                  //picture preview\n                  const fileReader = new FileReader()\n                  fileReader.addEventListener('load' , () => this.post.imageUrl = fileReader.result)\n                  fileReader.readAsDataURL(files[0])\n                }\n            \n                \n                },\n    savePost() {\n\n      let data\n\n      if(this.post.image){\n        data = new FormData()\n        data.append('title' , this.post.title)\n        data.append('description',this.post.description)\n        data.append('image' , this.post.image)\n      }else{\n         data = {\n          title: this.post.title,\n          description: this.post.description\n        };\n      }\n\n     \n\n      PostDataService.create(data)\n        .then(response => {\n          this.post.id = response.data.id;\n          console.log(response.data);\n          this.submitted = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newPost() {\n      this.submitted = false;\n      this.post = {};\n    }\n  }\n};\n</script>\n\n<style>\n\n\n</style>\n"],"sourceRoot":""}]}
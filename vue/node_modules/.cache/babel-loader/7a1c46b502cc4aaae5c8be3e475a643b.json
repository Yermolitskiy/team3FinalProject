{"remainingRequest":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/node_modules/babel-loader/lib/index.js!/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/src/services/setupInterceptors.js","dependencies":[{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/src/services/setupInterceptors.js","mtime":1630654849074},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/node_modules/babel-loader/lib/index.js","mtime":1630655630393},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/node_modules/eslint-loader/index.js","mtime":1630655629847}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hcnR1cnNqZXJtb2xpY2tpcy9wcm9qZWN0cy9UZWFtM0ZpbmFsUHJvamVjdERlcGxveS90ZWFtM0RlcGxveS92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgYXhpb3NJbnN0YW5jZSBmcm9tICIuL2FwaSI7CmltcG9ydCBUb2tlblNlcnZpY2UgZnJvbSAiLi90b2tlbi5zZXJ2aWNlIjsKCnZhciBzZXR1cCA9IGZ1bmN0aW9uIHNldHVwKHN0b3JlKSB7CiAgYXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogICAgdmFyIHRva2VuID0gVG9rZW5TZXJ2aWNlLmdldExvY2FsQWNjZXNzVG9rZW4oKTsKCiAgICBpZiAodG9rZW4pIHsKICAgICAgLy8gY29uZmlnLmhlYWRlcnNbIkF1dGhvcml6YXRpb24iXSA9ICdCZWFyZXIgJyArIHRva2VuOyAgLy8gZm9yIFNwcmluZyBCb290IGJhY2stZW5kCiAgICAgIGNvbmZpZy5oZWFkZXJzWyJ4LWFjY2Vzcy10b2tlbiJdID0gdG9rZW47IC8vIGZvciBOb2RlLmpzIEV4cHJlc3MgYmFjay1lbmQKICAgIH0KCiAgICByZXR1cm4gY29uZmlnOwogIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9KTsKICBheGlvc0luc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlcykgewogICAgcmV0dXJuIHJlczsKICB9LCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZXJyKSB7CiAgICAgIHZhciBvcmlnaW5hbENvbmZpZywgcnMsIGFjY2Vzc1Rva2VuOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgb3JpZ2luYWxDb25maWcgPSBlcnIuY29uZmlnOwoKICAgICAgICAgICAgICBpZiAoIShvcmlnaW5hbENvbmZpZy51cmwgIT09ICIvYXV0aC9zaWduaW4iICYmIGVyci5yZXNwb25zZSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKCEoZXJyLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxICYmICFvcmlnaW5hbENvbmZpZy5fcmV0cnkpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIG9yaWdpbmFsQ29uZmlnLl9yZXRyeSA9IHRydWU7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zSW5zdGFuY2UucG9zdCgiL2F1dGgvcmVmcmVzaHRva2VuIiwgewogICAgICAgICAgICAgICAgcmVmcmVzaFRva2VuOiBUb2tlblNlcnZpY2UuZ2V0TG9jYWxSZWZyZXNoVG9rZW4oKQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBhY2Nlc3NUb2tlbiA9IHJzLmRhdGEuYWNjZXNzVG9rZW47CiAgICAgICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ2F1dGgvcmVmcmVzaFRva2VuJywgYWNjZXNzVG9rZW4pOwogICAgICAgICAgICAgIFRva2VuU2VydmljZS51cGRhdGVMb2NhbEFjY2Vzc1Rva2VuKGFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBheGlvc0luc3RhbmNlKG9yaWdpbmFsQ29uZmlnKSk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KF9jb250ZXh0LnQwKSk7CgogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KGVycikpOwoKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s0LCAxNF1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CgpleHBvcnQgZGVmYXVsdCBzZXR1cDs="},{"version":3,"sources":["/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/vue/src/services/setupInterceptors.js"],"names":["axiosInstance","TokenService","setup","store","interceptors","request","use","config","token","getLocalAccessToken","headers","error","Promise","reject","response","res","err","originalConfig","url","status","_retry","post","refreshToken","getLocalRefreshToken","rs","accessToken","data","dispatch","updateLocalAccessToken"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBH,EAAAA,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACE,UAACC,MAAD,EAAY;AACV,QAAMC,KAAK,GAAGP,YAAY,CAACQ,mBAAb,EAAd;;AACA,QAAID,KAAJ,EAAW;AACT;AACAD,MAAAA,MAAM,CAACG,OAAP,CAAe,gBAAf,IAAmCF,KAAnC,CAFS,CAEiC;AAC3C;;AACD,WAAOD,MAAP;AACD,GARH,EASE,UAACI,KAAD,EAAW;AACT,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAXH;AAcAX,EAAAA,aAAa,CAACI,YAAd,CAA2BU,QAA3B,CAAoCR,GAApC,CACE,UAACS,GAAD,EAAS;AACP,WAAOA,GAAP;AACD,GAHH;AAAA,uEAIE,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,cADR,GACyBD,GAAG,CAACT,MAD7B;;AAAA,oBAGMU,cAAc,CAACC,GAAf,KAAuB,cAAvB,IAAyCF,GAAG,CAACF,QAHnD;AAAA;AAAA;AAAA;;AAAA,oBAKQE,GAAG,CAACF,QAAJ,CAAaK,MAAb,KAAwB,GAAxB,IAA+B,CAACF,cAAc,CAACG,MALvD;AAAA;AAAA;AAAA;;AAMMH,cAAAA,cAAc,CAACG,MAAf,GAAwB,IAAxB;AANN;AAAA;AAAA,qBASyBpB,aAAa,CAACqB,IAAd,CAAmB,oBAAnB,EAAyC;AACxDC,gBAAAA,YAAY,EAAErB,YAAY,CAACsB,oBAAb;AAD0C,eAAzC,CATzB;;AAAA;AAScC,cAAAA,EATd;AAagBC,cAAAA,WAbhB,GAagCD,EAAE,CAACE,IAbnC,CAagBD,WAbhB;AAeQtB,cAAAA,KAAK,CAACwB,QAAN,CAAe,mBAAf,EAAoCF,WAApC;AACAxB,cAAAA,YAAY,CAAC2B,sBAAb,CAAoCH,WAApC;AAhBR,+CAkBezB,aAAa,CAACiB,cAAD,CAlB5B;;AAAA;AAAA;AAAA;AAAA,+CAoBeL,OAAO,CAACC,MAAR,aApBf;;AAAA;AAAA,+CAyBSD,OAAO,CAACC,MAAR,CAAeG,GAAf,CAzBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF;;AAAA;AAAA;AAAA;AAAA;AAgCD,CA/CD;;AAiDA,eAAed,KAAf","sourcesContent":["import axiosInstance from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst setup = (store) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      const token = TokenService.getLocalAccessToken();\n      if (token) {\n        // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\n        config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  axiosInstance.interceptors.response.use(\n    (res) => {\n      return res;\n    },\n    async (err) => {\n      const originalConfig = err.config;\n\n      if (originalConfig.url !== \"/auth/signin\" && err.response) {\n        // Access Token was expired\n        if (err.response.status === 401 && !originalConfig._retry) {\n          originalConfig._retry = true;\n\n          try {\n            const rs = await axiosInstance.post(\"/auth/refreshtoken\", {\n              refreshToken: TokenService.getLocalRefreshToken(),\n            });\n\n            const { accessToken } = rs.data;\n\n            store.dispatch('auth/refreshToken', accessToken);\n            TokenService.updateLocalAccessToken(accessToken);\n\n            return axiosInstance(originalConfig);\n          } catch (_error) {\n            return Promise.reject(_error);\n          }\n        }\n      }\n\n      return Promise.reject(err);\n    }\n  );\n};\n\nexport default setup;\n"]}]}
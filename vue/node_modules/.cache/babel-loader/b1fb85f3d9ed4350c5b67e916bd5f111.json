{"remainingRequest":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/babel-loader/lib/index.js!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/services/auth.service.js","dependencies":[{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/services/auth.service.js","mtime":1630654849074},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/babel-loader/lib/index.js","mtime":1630655630393},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/eslint-loader/index.js","mtime":1630655629847}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYXJ0dXJzamVybW9saWNraXMvcHJvamVjdHMvdGVhbTNGaW5hbFByb2plY3QvdGVhbTNGaW5hbFByb2plY3QvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2FydHVyc2plcm1vbGlja2lzL3Byb2plY3RzL3RlYW0zRmluYWxQcm9qZWN0L3RlYW0zRmluYWxQcm9qZWN0L3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwovLyBpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwovLyBjb25zdCBBUElfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvYXV0aC8nOwovLyBjbGFzcyBBdXRoU2VydmljZSB7Ci8vICAgbG9naW4odXNlcikgewovLyAgICAgcmV0dXJuIGF4aW9zCi8vICAgICAgIC5wb3N0KEFQSV9VUkwgKyAnc2lnbmluJywgewovLyAgICAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLAovLyAgICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCi8vICAgICAgIH0pCi8vICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKLy8gICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5hY2Nlc3NUb2tlbikgewovLyAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhKSk7Ci8vICAgICAgICAgfQovLyAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwovLyAgICAgICB9KTsKLy8gICB9Ci8vICAgbG9nb3V0KCkgewovLyAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKLy8gICB9Ci8vICAgcmVnaXN0ZXIodXNlcikgewovLyAgICAgcmV0dXJuIGF4aW9zLnBvc3QoQVBJX1VSTCArICdzaWdudXAnLCB7Ci8vICAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLAovLyAgICAgICBlbWFpbDogdXNlci5lbWFpbCwKLy8gICAgICAgcGFzc3dvcmQ6IHVzZXIucGFzc3dvcmQKLy8gICAgIH0pOwovLyAgIH0KLy8gfQovLyBleHBvcnQgZGVmYXVsdCBuZXcgQXV0aFNlcnZpY2UoKTsKaW1wb3J0IGFwaSBmcm9tICIuL2FwaSI7CmltcG9ydCBUb2tlblNlcnZpY2UgZnJvbSAiLi90b2tlbi5zZXJ2aWNlIjsKCnZhciBBdXRoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQXV0aFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEF1dGhTZXJ2aWNlLCBbewogICAga2V5OiAibG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luKF9yZWYpIHsKICAgICAgdmFyIHVzZXJuYW1lID0gX3JlZi51c2VybmFtZSwKICAgICAgICAgIHBhc3N3b3JkID0gX3JlZi5wYXNzd29yZDsKICAgICAgcmV0dXJuIGFwaS5wb3N0KCIvYXV0aC9zaWduaW4iLCB7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmFjY2Vzc1Rva2VuKSB7CiAgICAgICAgICBUb2tlblNlcnZpY2Uuc2V0VXNlcihyZXNwb25zZS5kYXRhKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2dvdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgICAgVG9rZW5TZXJ2aWNlLnJlbW92ZVVzZXIoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWdpc3RlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjIpIHsKICAgICAgdmFyIHVzZXJuYW1lID0gX3JlZjIudXNlcm5hbWUsCiAgICAgICAgICBlbWFpbCA9IF9yZWYyLmVtYWlsLAogICAgICAgICAgcGFzc3dvcmQgPSBfcmVmMi5wYXNzd29yZDsKICAgICAgcmV0dXJuIGFwaS5wb3N0KCIvYXV0aC9zaWdudXAiLCB7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQXV0aFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBBdXRoU2VydmljZSgpOw=="},{"version":3,"sources":["/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/services/auth.service.js"],"names":["api","TokenService","AuthService","username","password","post","then","response","data","accessToken","setUser","removeUser","email"],"mappings":";;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;IAEMC,W;;;;;;;WACJ,qBAA8B;AAAA,UAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,UAAZC,QAAY,QAAZA,QAAY;AAC5B,aAAOJ,GAAG,CACPK,IADI,CACC,cADD,EACiB;AACpBF,QAAAA,QAAQ,EAARA,QADoB;AAEpBC,QAAAA,QAAQ,EAARA;AAFoB,OADjB,EAKJE,IALI,CAKC,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BR,UAAAA,YAAY,CAACS,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;AACD;;AAED,eAAOD,QAAQ,CAACC,IAAhB;AACD,OAXI,CAAP;AAYD;;;WAED,kBAAS;AACPP,MAAAA,YAAY,CAACU,UAAb;AACD;;;WAED,yBAAwC;AAAA,UAA7BR,QAA6B,SAA7BA,QAA6B;AAAA,UAAnBS,KAAmB,SAAnBA,KAAmB;AAAA,UAAZR,QAAY,SAAZA,QAAY;AACtC,aAAOJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AAC9BF,QAAAA,QAAQ,EAARA,QAD8B;AAE9BS,QAAAA,KAAK,EAALA,KAF8B;AAG9BR,QAAAA,QAAQ,EAARA;AAH8B,OAAzB,CAAP;AAKD;;;;;;AAGH,eAAe,IAAIF,WAAJ,EAAf","sourcesContent":["// import axios from 'axios';\n\n// const API_URL = 'http://localhost:8080/api/auth/';\n\n// class AuthService {\n//   login(user) {\n//     return axios\n//       .post(API_URL + 'signin', {\n//         username: user.username,\n//         password: user.password\n//       })\n//       .then(response => {\n//         if (response.data.accessToken) {\n//           localStorage.setItem('user', JSON.stringify(response.data));\n//         }\n\n//         return response.data;\n//       });\n//   }\n\n//   logout() {\n//     localStorage.removeItem('user');\n//   }\n\n//   register(user) {\n//     return axios.post(API_URL + 'signup', {\n//       username: user.username,\n//       email: user.email,\n//       password: user.password\n//     });\n//   }\n// }\n\n// export default new AuthService();\nimport api from \"./api\";\nimport TokenService from \"./token.service\";\n\nclass AuthService {\n  login({ username, password }) {\n    return api\n      .post(\"/auth/signin\", {\n        username,\n        password\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          TokenService.setUser(response.data);\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    TokenService.removeUser();\n  }\n\n  register({ username, email, password }) {\n    return api.post(\"/auth/signup\", {\n      username,\n      email,\n      password\n    });\n  }\n}\n\nexport default new AuthService();\n"]}]}
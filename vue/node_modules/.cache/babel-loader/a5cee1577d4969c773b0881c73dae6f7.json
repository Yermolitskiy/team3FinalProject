{"remainingRequest":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/node_modules/babel-loader/lib/index.js!/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/src/services/setupInterceptors.js","dependencies":[{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/src/services/setupInterceptors.js","mtime":1630654849074},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/node_modules/babel-loader/lib/index.js","mtime":1630655630393},{"path":"/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/node_modules/eslint-loader/index.js","mtime":1630655629847}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hcnR1cnNqZXJtb2xpY2tpcy9wcm9qZWN0cy9UZWFtM0ZpbmFsUHJvamVjdERlcGxveS90ZWFtM0RlcGxveS9ub2RlanMvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zSW5zdGFuY2UgZnJvbSAiLi9hcGkiOwppbXBvcnQgVG9rZW5TZXJ2aWNlIGZyb20gIi4vdG9rZW4uc2VydmljZSI7Cgp2YXIgc2V0dXAgPSBmdW5jdGlvbiBzZXR1cChzdG9yZSkgewogIGF4aW9zSW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAgIHZhciB0b2tlbiA9IFRva2VuU2VydmljZS5nZXRMb2NhbEFjY2Vzc1Rva2VuKCk7CgogICAgaWYgKHRva2VuKSB7CiAgICAgIC8vIGNvbmZpZy5oZWFkZXJzWyJBdXRob3JpemF0aW9uIl0gPSAnQmVhcmVyICcgKyB0b2tlbjsgIC8vIGZvciBTcHJpbmcgQm9vdCBiYWNrLWVuZAogICAgICBjb25maWcuaGVhZGVyc1sieC1hY2Nlc3MtdG9rZW4iXSA9IHRva2VuOyAvLyBmb3IgTm9kZS5qcyBFeHByZXNzIGJhY2stZW5kCiAgICB9CgogICAgcmV0dXJuIGNvbmZpZzsKICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgfSk7CiAgYXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiByZXM7CiAgfSwgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGVycikgewogICAgICB2YXIgb3JpZ2luYWxDb25maWcsIHJzLCBhY2Nlc3NUb2tlbjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIG9yaWdpbmFsQ29uZmlnID0gZXJyLmNvbmZpZzsKCiAgICAgICAgICAgICAgaWYgKCEob3JpZ2luYWxDb25maWcudXJsICE9PSAiL2F1dGgvc2lnbmluIiAmJiBlcnIucmVzcG9uc2UpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICghKGVyci5yZXNwb25zZS5zdGF0dXMgPT09IDQwMSAmJiAhb3JpZ2luYWxDb25maWcuX3JldHJ5KSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBvcmlnaW5hbENvbmZpZy5fcmV0cnkgPSB0cnVlOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiBheGlvc0luc3RhbmNlLnBvc3QoIi9hdXRoL3JlZnJlc2h0b2tlbiIsIHsKICAgICAgICAgICAgICAgIHJlZnJlc2hUb2tlbjogVG9rZW5TZXJ2aWNlLmdldExvY2FsUmVmcmVzaFRva2VuKCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBycyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBycy5kYXRhLmFjY2Vzc1Rva2VuOwogICAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdhdXRoL3JlZnJlc2hUb2tlbicsIGFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2UudXBkYXRlTG9jYWxBY2Nlc3NUb2tlbihhY2Nlc3NUb2tlbik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgYXhpb3NJbnN0YW5jZShvcmlnaW5hbENvbmZpZykpOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg0KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChfY29udGV4dC50MCkpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChlcnIpKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNCwgMTRdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCkpOwp9OwoKZXhwb3J0IGRlZmF1bHQgc2V0dXA7"},{"version":3,"sources":["/Users/artursjermolickis/projects/Team3FinalProjectDeploy/team3Deploy/nodejs/vue/src/services/setupInterceptors.js"],"names":["axiosInstance","TokenService","setup","store","interceptors","request","use","config","token","getLocalAccessToken","headers","error","Promise","reject","response","res","err","originalConfig","url","status","_retry","post","refreshToken","getLocalRefreshToken","rs","accessToken","data","dispatch","updateLocalAccessToken"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBH,EAAAA,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACE,UAACC,MAAD,EAAY;AACV,QAAMC,KAAK,GAAGP,YAAY,CAACQ,mBAAb,EAAd;;AACA,QAAID,KAAJ,EAAW;AACT;AACAD,MAAAA,MAAM,CAACG,OAAP,CAAe,gBAAf,IAAmCF,KAAnC,CAFS,CAEiC;AAC3C;;AACD,WAAOD,MAAP;AACD,GARH,EASE,UAACI,KAAD,EAAW;AACT,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAXH;AAcAX,EAAAA,aAAa,CAACI,YAAd,CAA2BU,QAA3B,CAAoCR,GAApC,CACE,UAACS,GAAD,EAAS;AACP,WAAOA,GAAP;AACD,GAHH;AAAA,uEAIE,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,cADR,GACyBD,GAAG,CAACT,MAD7B;;AAAA,oBAGMU,cAAc,CAACC,GAAf,KAAuB,cAAvB,IAAyCF,GAAG,CAACF,QAHnD;AAAA;AAAA;AAAA;;AAAA,oBAKQE,GAAG,CAACF,QAAJ,CAAaK,MAAb,KAAwB,GAAxB,IAA+B,CAACF,cAAc,CAACG,MALvD;AAAA;AAAA;AAAA;;AAMMH,cAAAA,cAAc,CAACG,MAAf,GAAwB,IAAxB;AANN;AAAA;AAAA,qBASyBpB,aAAa,CAACqB,IAAd,CAAmB,oBAAnB,EAAyC;AACxDC,gBAAAA,YAAY,EAAErB,YAAY,CAACsB,oBAAb;AAD0C,eAAzC,CATzB;;AAAA;AAScC,cAAAA,EATd;AAagBC,cAAAA,WAbhB,GAagCD,EAAE,CAACE,IAbnC,CAagBD,WAbhB;AAeQtB,cAAAA,KAAK,CAACwB,QAAN,CAAe,mBAAf,EAAoCF,WAApC;AACAxB,cAAAA,YAAY,CAAC2B,sBAAb,CAAoCH,WAApC;AAhBR,+CAkBezB,aAAa,CAACiB,cAAD,CAlB5B;;AAAA;AAAA;AAAA;AAAA,+CAoBeL,OAAO,CAACC,MAAR,aApBf;;AAAA;AAAA,+CAyBSD,OAAO,CAACC,MAAR,CAAeG,GAAf,CAzBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF;;AAAA;AAAA;AAAA;AAAA;AAgCD,CA/CD;;AAiDA,eAAed,KAAf","sourcesContent":["import axiosInstance from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst setup = (store) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      const token = TokenService.getLocalAccessToken();\n      if (token) {\n        // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\n        config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  axiosInstance.interceptors.response.use(\n    (res) => {\n      return res;\n    },\n    async (err) => {\n      const originalConfig = err.config;\n\n      if (originalConfig.url !== \"/auth/signin\" && err.response) {\n        // Access Token was expired\n        if (err.response.status === 401 && !originalConfig._retry) {\n          originalConfig._retry = true;\n\n          try {\n            const rs = await axiosInstance.post(\"/auth/refreshtoken\", {\n              refreshToken: TokenService.getLocalRefreshToken(),\n            });\n\n            const { accessToken } = rs.data;\n\n            store.dispatch('auth/refreshToken', accessToken);\n            TokenService.updateLocalAccessToken(accessToken);\n\n            return axiosInstance(originalConfig);\n          } catch (_error) {\n            return Promise.reject(_error);\n          }\n        }\n      }\n\n      return Promise.reject(err);\n    }\n  );\n};\n\nexport default setup;\n"]}]}
{"remainingRequest":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/PostsList.vue?vue&type=style&index=0&id=06658691&lang=css","dependencies":[{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/PostsList.vue","mtime":1630660701708},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/css-loader/dist/cjs.js","mtime":1630655630120},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1630655630986},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/postcss-loader/src/index.js","mtime":1630655630356},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/cache-loader/dist/cjs.js","mtime":1630655629758},{"path":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1630655630586}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgouY2FyZC1pbWctdG9wLWxpc3QgewogIG9iamVjdC1maXQ6IG5vbmU7IC8qIERvIG5vdCBzY2FsZSB0aGUgaW1hZ2UgKi8KICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjsgLyogQ2VudGVyIHRoZSBpbWFnZSB3aXRoaW4gdGhlIGVsZW1lbnQgKi8KICB3aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiAxMDBweDsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9Ci5jb250ZW50IHsKICBtYXgtd2lkdGg6IDUwMHB4OwogIG1hcmdpbjogYXV0bzsKICBkaXNwbGF5OiBmbGV4Owp9Ci5hbGxfY2FyZHMgewogIG1hcmdpbi10b3A6IDI1cHg7CiAgbWFyZ2luLWxlZnQ6IDIwJTsKICBtYXJnaW4tcmlnaHQ6IDIwJTsKICBoZWlnaHQ6IDEwMCU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5jYXJkIHsKICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMik7CiAgdHJhbnNpdGlvbjogMC4zczsKICB3aWR0aDogMTAwJTsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiAyNXB4OwogIAp9CgouY2FyZDpob3ZlciB7CiAgYm94LXNoYWRvdzogMCA4cHggMTZweCAwIHJnYmEoMCwwLDAsMC4yKTsKfQoKLmNvbnRhaW5lciB7CiAgcGFkZGluZzogMnB4IDE2cHg7Cn0K"},{"version":3,"sources":["/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/PostsList.vue"],"names":[],"mappings":"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","file":"/Users/artursjermolickis/projects/team3FinalProject/team3FinalProject/vue/src/components/PostsList.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"all_cards\">\n     \n  <div      \n      :class=\"{ active: index == currentIndex }\"\n          v-for=\"(post, index) in posts\"\n          :key=\"index\"\n          @click=\"setActivePost(post, index)\"\n      >\n      <div class=\"card\">\n        <router-link :to=\"'/posts/' + post.id\"><img class=\"card-img-top-list\" :src='post.imageUrl ? post.imageUrl : \"https://lh3.googleusercontent.com/d/1RlTfZ1wVgMsgSN3b8L1bFameHjYxFDfz=s800?authuser=0\"' alt=\"image\" style=\"width:100%\"></router-link>\n        \n        <div class=\"container\">\n          <h4><b>{{ post.title }}</b></h4>\n          <p>{{ post.description }}</p>\n          \n        </div>\n        \n      </div>\n    </div>\n   \n  </div>\n</template>\n\n<script>\nimport PostDataService from \"../services/PostDataService\";\n\nexport default {\n  name: \"posts-list\",\n  data() {\n    return {\n      posts: [],\n      currentPost: null,\n      currentIndex: -1,\n      title: \"\"\n    };\n  },\n  methods: {\n    retrievePosts() {\n      PostDataService.getAll()\n        .then(response => {\n          this.posts = response.data;\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    refreshList() {\n      this.retrievePosts();\n      this.currentPost = null;\n      this.currentIndex = -1;\n    },\n\n    setActivePost(post, index) {\n      this.currentPost = post;\n      this.currentIndex = post ? index : -1;\n    },\n\n    removeAllPosts() {\n      PostDataService.deleteAll()\n        .then(response => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    searchTitle() {\n      PostDataService.findByTitle(this.title)\n        .then(response => {\n          this.posts = response.data;\n          this.setActivePost(null);\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  },\n  mounted() {\n    this.retrievePosts();\n  }\n};\n</script>\n\n<style>\n\n.card-img-top-list {\n  object-fit: none; /* Do not scale the image */\n  object-position: center; /* Center the image within the element */\n  width: 100%;\n  max-height: 100px;\n  margin-bottom: 1rem;\n}\n.content {\n  max-width: 500px;\n  margin: auto;\n  display: flex;\n}\n.all_cards {\n  margin-top: 25px;\n  margin-left: 20%;\n  margin-right: 20%;\n  height: 100%;\n  position: relative;\n}\n.card {\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  width: 100%;\n  justify-content: center;\n  margin-bottom: 25px;\n  \n}\n\n.card:hover {\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n}\n\n.container {\n  padding: 2px 16px;\n}\n</style>\n"]}]}